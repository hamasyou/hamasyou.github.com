<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: メモ | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/memo/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2017-05-10T12:02:50+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[iOS/Swift]ReactiveCocoa 3.0 で ViewModel から Signal をセルフ・コントロールするイディオム]]></title>
    <link href="http://hamasyou.com/blog/2015/08/13/ios-swift-reactivecocoa-signal-viewmodel/"/>
    <updated>2015-08-13T11:57:28+09:00</updated>
    <id>http://hamasyou.com/blog/2015/08/13/ios-swift-reactivecocoa-signal-viewmodel</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/ReactiveCocoa/ReactiveCocoa">ReactiveCocoa</a> が v.3.0-RC.1 がでて、そろそろ製品に Swift で ReactiveCocoa が使えるようになりそうな感じになってきました。</p>

<p>いつも <code>Signal</code> を自分で制御するイディオムを忘れてしまうので、メモ書きです。</p>

<pre><code class="swift">import Foundation
import UIKit
import ReactiveCocoa

class MyViewModel {
    let (changed, sink) = Signal&lt;Void, NoError&gt;.pipe()

    func doAction() {
        // do something
        sendNext(sink, ())
    }    
}


class MyViewController : UIViewController {
    let viewModel = MyViewModel()

    override func viewDidLoad() {
        super.viewDidLoad()

        viewModel.changed |&gt; observe(next: debugPrintln)

        viewModel.doAction()              
    }
}
</code></pre>
]]></content>
  </entry>
  
</feed>
