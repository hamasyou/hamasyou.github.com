<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 距離 | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/ju-li/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2014-02-14T13:15:36+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[緯度・経度から二点間の距離と方向を計算する]]></title>
    <link href="http://hamasyou.com/blog/2010/09/07/post-2/"/>
    <updated>2010-09-07T13:39:00+09:00</updated>
    <id>http://hamasyou.com/blog/2010/09/07/post-2</id>
    <content type="html"><![CDATA[<p>ジオ系を触っていて、緯度、経度から二点間の距離とその方向を計算するロジックは色々なところで必要になるので、メモ。</p>

<p>元記事は下で、JavaScript に書き直しただけです。</p>

<h4>緯度、経度から距離と向きを算出</h4>




<ul><li><a href="http://prog47.blogdns.org/blog/index.php?e=283" rel="external nofollow">緯度、経度から距離と向きを算出 - 中年プログラマblog</a></li></ul>




<!-- more -->




<h2>緯度・経度から二点間の距離を計算する</h2>




<pre class="code"><span class="rem">//</span>
<span class="rem">// 測地線航海算法の公式</span>
<span class="rem">//</span>
<span class="keyword">function</span> geoDistance(lat1, lng1, lat2, lng2, precision) {
  <span class="rem">// 引数　precision は小数点以下の桁数（距離の精度）</span>
  <span class="keyword">var</span> distance = <span class="num">0</span>;
  <span class="keyword">if</span> ((Math.abs(lat1 - lat2) &lt; <span class="num">0.00001</span>) &amp;&amp; (Math.abs(lng1 - lng2) &lt; <span class="num">0.00001</span>)) {
    distance = <span class="num">0</span>;
  } <span class="keyword">else</span> {
    lat1 = lat1 * Math.PI / <span class="num">180</span>;
    lng1 = lng1 * Math.PI / <span class="num">180</span>;
    lat2 = lat2 * Math.PI / <span class="num">180</span>;
    lng2 = lng2 * Math.PI / <span class="num">180</span>;
 
    <span class="keyword">var</span> A = <span class="num">6378140</span>;
    <span class="keyword">var</span> B = <span class="num">6356755</span>;
    <span class="keyword">var</span> F = (A - B) / A;
 
    <span class="keyword">var</span> P1 = Math.atan((B / A) * Math.tan(lat1));
    <span class="keyword">var</span> P2 = Math.atan((B / A) * Math.tan(lat2));
 
    <span class="keyword">var</span> X = Math.acos(Math.sin(P1) * Math.sin(P2) + Math.cos(P1) * Math.cos(P2) * Math.cos(lng1 - lng2));
    <span class="keyword">var</span> L = (F / <span class="num">8</span>) * ((Math.sin(X) - X) * Math.pow((Math.sin(P1) + Math.sin(P2)), <span class="num">2</span>) / Math.pow(Math.cos(X / <span class="num">2</span>), <span class="num">2</span>) - (Math.sin(X) - X) * Math.pow(Math.sin(P1) - Math.sin(P2), <span class="num">2</span>) / Math.pow(Math.sin(X), <span class="num">2</span>));
 
    distance = A * (X + L);
    <span class="keyword">var</span> decimal_no = Math.pow(<span class="num">10</span>, precision);
    distance = Math.round(decimal_no * distance / <span class="num">1</span>) / decimal_no;   <span class="rem">// kmに変換するときは(1000で割る)</span>
  }
  <span class="keyword">return</span> distance;
}</pre>




<h2>緯度・経度から方向（方角）を計算する</h2>




<pre class="code"><span class="keyword">function</span> geoDirection(lat1, lng1, lat2, lng2) {
  <span class="rem">// 緯度経度 lat1, lng1 の点を出発として、緯度経度 lat2, lng2 への方位</span>
  <span class="rem">// 北を０度で右回りの角度０～３６０度</span>
  <span class="keyword">var</span> Y = Math.cos(lng2 * Math.PI / <span class="num">180</span>) * Math.sin(lat2 * Math.PI / <span class="num">180</span> - lat1 * Math.PI / <span class="num">180</span>);
  <span class="keyword">var</span> X = Math.cos(lng1 * Math.PI / <span class="num">180</span>) * Math.sin(lng2 * Math.PI / <span class="num">180</span>) - Math.sin(lng1 * Math.PI / <span class="num">180</span>) * Math.cos(lng2 * Math.PI / <span class="num">180</span>) * Math.cos(lat2 * Math.PI / <span class="num">180</span> - lat1 * Math.PI / <span class="num">180</span>);
  <span class="keyword">var</span> dirE0 = <span class="num">180</span> * Math.atan2(Y, X) / Math.PI; <span class="rem">// 東向きが０度の方向</span>
  <span class="keyword">if</span> (dirE0 &lt; <span class="num">0</span>) {
    dirE0 = dirE0 + <span class="num">360</span>; <span class="rem">//0～360 にする。</span>
  }
  <span class="keyword">var</span> dirN0 = (dirE0 + <span class="num">90</span>) % <span class="num">360</span>; <span class="rem">//(dirE0+90)÷360の余りを出力 北向きが０度の方向</span>
  <span class="keyword">return</span> dirN0;
}</pre>



]]></content>
  </entry>
  
</feed>
