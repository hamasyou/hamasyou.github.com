<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: モバイル | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/mobairu/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2017-09-03T15:18:24+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[モバイルデザインパターン― ユーザーインタフェースのためのパターン集]]></title>
    <link href="http://hamasyou.com/blog/2012/09/27/487311568X/"/>
    <updated>2012-09-27T11:27:00+09:00</updated>
    <id>http://hamasyou.com/blog/2012/09/27/487311568X</id>
    <content type="html"><![CDATA[<p>{% blockquote 本書背表紙より %}</p>

<p>モバイルアプリのUIパターンを手軽に参照できるリファレンス。主要なプラットフォームで動くモバイルアプリの画面例を400点以上使いながら、ユーザーインタフェースの定番パターンをグラフィカルに解説します。本書で紹介する68個の基本パターンと5個のアンチパターンが、使いやすいモバイルアプリをデザインするうえでクリアしなければならない設計上の課題を解決してくれます。</p>

<p><em>掲載UIパターン</em>:ナビゲーション、フォーム、テーブルとリスト、検索、並び替え、フィルター、ツール、グラフ、誘導、フィードバック、アフォーダンス、ヘルプ、アンチパターン</p>

<p>{% endblockquote %}</p>

<p>本書は、モバイルアプリ（スマートフォン上で動くアプリ）の UI デザインの定石をパターンとして紹介しているものになります。いいアプリを作っても、UI や見た目が悪いとそれだけで価値が下がってしまいます。アプリにとって本当に良い UI デザインを導ける人は、まだまだ少数だと思います。</p>

<p>本書は、そんな良いデザインというのはどういうものなのか、使いやすい UI というのはどういうものなのかを名前をつけてパターン化し紹介しています。内容はとてもグラフィカルなので、かるく読み流すことも出来ますし、中身を熟読してさらに自分流のパターンを産み出していくのも良いと思います。</p>

<p>ますます熱くなってくるであろうモバイルアプリ開発の現場で、デザインができなくて泣いている人にオススメの一冊です。スマートフォンアプリの開発者は、手元に置いておくと便利です。</p>

<!-- more -->




<h2>おぼえがき</h2>




<h3>本書で紹介されているパターンの参考イメージ</h3>


<p><a href="http://www.mobiledesignpatterngallery.com/mobile-patterns.php" rel="external nofollow">Mobile Design Pattern Gallery:UI Patterns for iOS, Android and More</a></p>

<p><a href="http://www.flickr.com/photos/mobiledesignpatterngallery/collections" rel="external nofollow">Mobile Design Pattern Gallery&rsquo;s photostream - flickr</a></p>

<h3>ナビゲーション</h3>




<dl>
<dt>Springboard（スプリングボード）</dt>
<dd><p>起動直後に表示されるメニューが、アプリ利用のきっかけになる。パーソナライズによって表示項目を変えてもよい。各メニュー項目が同じ重要度の場合はグリッドレイアウトを、そうでない場合は変則的なレイアウトを検討する。</p></dd>
<dt>List Menu（リストメニュー）</dt>
<dd><p>起動直後にメニューが並ぶ点は、スプリングボードと同じだが、メニュー項目の名前が長い場合や、サブタイトル等が必要な場合に利用する。</p></dd>
<dt>Tabs（タブ）</dt>
<dd><p>タブは標準的な Web サイトでのナビゲーションパターンに基づいているため、ユーザにとって馴染みが深い。</p></dd>
<dt>Gallery（ギャラリー）</dt>
<dd><p>個々のコンテンツを通じてナビゲーションを行う。コンテンツが頻繁に変わるような場合に利用すると良い。</p></dd>
<dt>Dashboard（ダッシュボード）</dt>
<dd><p>それぞれのデータや指標の要約が一目でわかるため、財務管理、データ分析、マーケティングアプリなどで使える。コンテンツの詰め込みすぎに注意する。</p></dd>
<dt>Metaphor（メタファー）</dt>
<dd><p>最初に表示される画面が何かのメタファーになっているのが特徴で、ゲームなどで使える。また、ユーザのメモをカタログ化したようなアプリにも応用しやすい。分かりにくいメタファーを使ってしまうと使いにくい UI になってしまうため注意。</p></dd>
</dl>




<h4>補助的なナビゲーション</h4>


<p>メニューとしては使いづらいが、一つのコンテンツの補助メニューとして利用しやすいパターン。</p>

<dl>
<dt>Carousel（カルーセル）</dt>
<dd><p>コンテンツをよく見せたい場合に使える。コンテンツの数が多くなった場合（8個以上）は、リスト表示を検討する。</p></dd>
<dt>Expanding List（伸縮リスト）, アコーディオンメニュー</dt>
<dd><p>徐々に詳細なオプション項目を表示させたい場合に適している</p></dd>
</dl>




<h3>テーブルとリスト</h3>




<dl>
<dt>Basic Table（基本的なテーブル）</dt>
<dd><p>行間に細い線を表示したりすると見やすさが向上する。縦の罫線や色の濃い罫線は使わない。文字列は左寄せ、数値は右寄せ。</p></dd>
</dl>




<h3>検索、並び替え、フィルター</h3>




<dl>
<dt>Explicit Search（明示的な検索）</dt>
<dd><p>入力内容をクリアするためのボタンを入力フィールド内に用意する。検索をキャンセルできるボタンを用意する。検索中であることがわかるフィードバックを用意する。</p></dd>
<dt>Dynamic Search（動的な検索）</dt>
<dd><p>アドレス帳、ユーザのメディアライブラリなどの有限なデータ集合に対して、入力ごとに動的に検索を行うパターンは有効になる。</p></dd>
<dt>Saved and Recent Searches（検索結果の履歴）</dt>
<dd><p><em>成功を収めたモバイルインターフェースはいずれも「ユーザの活動を尊重する」というユーザビリティ原則</em>を守っている。</p></dd>
</dl>




<h3>ツール</h3>




<dl>
<dt>Call to Action Button（アクションボタン）</dt>
<dd><p>画面内でユーザに行わせたいアクションが1種類だけの場合、目立つボタンを画面内に用意するとよい。</p></dd>
<dt>Bulk Action（操作の一括実行）</dt>
<dd><p>画面上のコンテンツを一括して実行できるモードを提供する場合、編集モードというのを用意するとよい。編集モードから復帰するための手段も明確に提供する。</p></dd>
</dl>




<h3>誘導</h3>




<dl>
<dt>Tip（ツールチップ）</dt>
<dd><p>ツールチップは対象の機能に隣接して表示されるようにする。</p></dd>
<dt>Tour（ツアー）</dt>
<dd><p>アプリが持つ重要な機能をユーザに明らかにするために使う。ユーザにとってのゴールは何かという観点で設計する。</p></dd>
<dt>Transparency（透過表示）</dt>
<dd><p>画面上のコンテンツに重なった半透明のレイヤーで使用方法を表示する。ユーザが操作を始めたら、レイヤーを非表示にする。</p></dd>
</dl>




<h3>フィードバックとアフォーダンス</h3>




<dl>
<dt>Error Messages（エラーメッセージ）</dt>
<dd><p>モーダルダイアログとして表示するよりも現在内の画面内にメッセージを配置する方が望ましい。</p></dd>
<dt>Tap（タップ）</dt>
<dd><p>立体表現や影をデザインとして取り入れることで、それがタップ可能であることを示せる。</p></dd>
<dt>Flick（フリック）</dt>
<dd><p>表示可能なコンテンツが他にもあるということを示す方法として、フリック可能なことを認識させるという方法もある。</p></dd>
</dl>




<h3>アンチパターン</h3>




<dl>
<dt>Idiot Box（作業を妨げる愚行）</dt>
<dd><p>確認ダイアログを表示するのはもとに戻せない操作をする場合だけにする。</p></dd>
</dl>



]]></content>
  </entry>
  
</feed>
