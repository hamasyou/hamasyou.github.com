<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Blog | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/blog/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2014-08-30T13:56:03+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[canonicalなURLってなにがいいんだろう？]]></title>
    <link href="http://hamasyou.com/blog/2014/03/04/canonical-url/"/>
    <updated>2014-03-04T12:27:08+09:00</updated>
    <id>http://hamasyou.com/blog/2014/03/04/canonical-url</id>
    <content type="html"><![CDATA[<p>ちょっと疑問に思ったこと。Web の SEO をやっていると <strong>canonical</strong> ページっていうのを聞いたことがあるとおもいます。
canonical ページとは、Google 先生曰く「<em>複数の類似した内容のページの中で優先されるページです。</em>」だそうです。
僕は <strong>URL の正規化</strong> に使うものだという認識ですが、間違ってませんよね？？</p>

<p>で、この canonical URL ってどう付けたらいいんだろう？っていう疑問です。</p>

<!-- more -->


<h2>canonical URL ってどっち？</h2>

<h3>RESTful リソースの URL</h3>

<p>Web サービスやっていると、<strong>RESTful</strong> な URL 設計大事！ってなりますよね。
Rails なんかをやっていると、ルーティングが自動的に RESTful になってて便利です。こんな感じ。</p>

<pre><code class="console-raw">
       hypermedia GET    /hypermedia(.:format)            hypermedia#index
                  POST   /hypermedia(.:format)            hypermedia#create
  new_hypermedium GET    /hypermedia/new(.:format)        hypermedia#new
 edit_hypermedium GET    /hypermedia/:id/edit(.:format)   hypermedia#edit
      hypermedium GET    /hypermedia/:id(.:format)        hypermedia#show
                  PATCH  /hypermedia/:id(.:format)        hypermedia#update
                  PUT    /hypermedia/:id(.:format)        hypermedia#update
                  DELETE /hypermedia/:id(.:format)        hypermedia#destroy

</code></pre>

<p>こういうルーティングだと、<code>http://example.com/hypermedia/1</code> みたいな感じでリソースにアクセスできます。
で、例えば、作ってる Web サービスで、<code>hypermedia/1</code> リソースの別名で、hypermedia の URL を使ってもアクセスできるようにしたい。こんな感じで。</p>

<pre><code class="console-raw">http://example.com/hamasyou.com
</code></pre>

<p>ルーティングに</p>

<pre><code class="ruby">get '*url', to: 'hypermedia#show', format: false
</code></pre>

<p>を追加しておくと <code>hypermedia#show</code> の中で <code>params[:url]</code> から <code>hamasyou.com</code> っていう値をとれるようになります。
なので、こういう URL に別名付けてちょっとクールな感じの Web サービスを気取ってみたくなりました。</p>

<h3>どっちがいいの？</h3>

<p>で、本題ですが、こういうリソースの別名扱いの URL があるとき、canonical URL として指定するのは</p>

<ol>
<li><code>/hypermedia/:id</code></li>
<li><code>*url</code></li>
</ol>


<p>のどっちがいいんだろう？という疑問です。HTML 的に書くとこんな感じ。</p>

<pre><code class="html">&lt;link rel="canonical" href="http://example.com/hypermedia/1"&gt;
&lt;link rel="canonical" href="http://example.com/hamasyou.com"&gt;
</code></pre>

<p>どっちでもいい。好みの問題って感じもしなくもないですが、皆さんどっちを選ぶのが多いんでしょう？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[読みやすいブログ、読みにくいブログ]]></title>
    <link href="http://hamasyou.com/blog/2014/02/22/readable-blog-unreadable-blog/"/>
    <updated>2014-02-22T23:07:05+09:00</updated>
    <id>http://hamasyou.com/blog/2014/02/22/readable-blog-unreadable-blog</id>
    <content type="html"><![CDATA[<p>読みやすいブログってどうしてあんなに読みやすいんでしょうかね？僕もかれこれサイトだけは9年ほどやってます。
毎日ブログを綴っているわけではないのでアレですが、ブログ歴は3〜5年くらいにはなるんじゃないかなと思います。</p>

<p>これまで3回くらいブログのデザインを変えました。デザインの賞味期限って、たぶん3年くらいなんじゃないかと思います。
Web の黎明期なんかは、<code>blink</code> タグや <code>marquee</code> タグなんかをつかって派手なアクションをするサイトが流行りました。
その後、Web デザイナさんが頑張って作るクール系のサイトが流行り、今やレスポンシブサイトですよ。</p>

<p><span class="lead">（Google で「<em>blink html</em>」を検索すると検索結果が面白いことになってますねw）</span></p>

<p>うちのサイトも一応それなりに時代の流れに合わせてデザインは変えてきたつもりですが、いつまで経っても読みやすいブログにならないのはなぜなんでしょうかね。。
文字の大きさや背景色と文字色の調和、フォントや <code>line-height</code> なんかにも気を付けているつもりなんですが、そういう小手先のテクニックに惑わされているうちは、
読みやすいブログにはならないってことですね、きっと。。。</p>

<!-- more -->


<h2>読みやすいブログの特徴</h2>

<h3>見出しが分かりやすい</h3>

<p>読みやすいブログの特徴として、僕が感じるのはやっぱり「<strong>見出しがわかりやすい</strong>」ことですね。
文字が大きいとかスペースが空いているとかだけじゃなく、なんか特徴的だったり、流し読みしても内容が頭の中に入ってくる感じ。
流し読みしても頭に入ってくるように見出しをつけるっていうのは、大事な気がします。</p>

<h3>文字が適度に大きい</h3>

<p>フォントもそうですが、フォントサイズも重要な要素だと思いました。読み物としてはやっぱり <strong>14pt〜16pt</strong> は欲しいんじゃないかと思います。
あとは <code>line-height</code> ですね。<strong>1.5em〜1.8em</strong> くらいあると、Web 上で文章を読んでも読みやすいと感じます。</p>

<p>あとは、適度に改行をいれるといいってよく書かれていますが、あんまり改行が多すぎても駄目な感じがします。。</p>

<h3>適度に画像が入っている</h3>

<p>うちのサイトは一応書評サイトなので、本の内容と感想、それにおぼえがきを中心にしています。そうすると、あんまり画像を載せることがないんですが、
<em>読みやすいサイトは適切に画像が入ってる</em> ことが多いと思います。アイキャッチの画像なんかも効果的に使われていますね。</p>

<h3>サイトの横幅が狭め</h3>

<p>最近は PC の性能もよくなって、ディスプレイサイズも大きい物が増えています。なので、PC のブラウザサイズは 1024x768 以上のものが多くなっています。
ただ、逆にスマホやタブレットで Web サイトを見る人も増えているので、二極化しているという感じでしょうか。</p>

<p>で、読みやすいサイトは、文章の一行の量が50文字以下に抑えられていることが多いと思いました。サイトのスペースを上手く使いながら、<strong>一行の長さは狭め</strong> というのが読みやすいサイトの特徴な気がします。</p>

<h2>まとめ</h2>

<p>読みやすいブログと読みにくいブログですが、うちのサイトは間違いなく <strong>読みにくいブログ</strong> なんでしょうね。。。毎日1記事で、だんだん読みやすいブログになっていけばいいなと思ってます。。
頑張ります！</p>

<p><a href="http://www.amazon.co.jp/gp/product/4799100874?ie=UTF8&amp;camp=247&amp;creativeASIN=4799100874&amp;linkCode=xm2&amp;tag=sorehabooks-22"><img src="https://images-na.ssl-images-amazon.com/images/I/519LYdJLqIL._SS300_.jpg" height="230" width="230" alt="すっきり！　わかりやすい！　文章が書ける" /></a><a href="http://www.amazon.co.jp/gp/product/4820748270?ie=UTF8&amp;camp=247&amp;creativeASIN=4820748270&amp;linkCode=xm2&amp;tag=sorehabooks-22"><img src="https://images-na.ssl-images-amazon.com/images/I/511vOWP0YeL._SS300_.jpg" height="230" width="230" alt="書くスキルUP すぐできる! 伝わる文章の書き方 確実に文章力がつく! 7つのステップ" /></a><a href="http://www.amazon.co.jp/gp/product/4620792993?ie=UTF8&amp;camp=247&amp;creativeASIN=4620792993&amp;linkCode=xm2&amp;tag=sorehabooks-22"><img src="https://images-na.ssl-images-amazon.com/images/I/510Lvq7j7BL._SS300_.jpg" height="230" width="230" alt="1時間でできる ブログ &amp; SNS　――　大きな文字で読みやすい 初心者でもらくらく" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[静的サイトを素早く構築するためにGoLangで作られたジェネレータHugo]]></title>
    <link href="http://hamasyou.com/blog/2014/02/21/hugo/"/>
    <updated>2014-02-21T15:43:47+09:00</updated>
    <id>http://hamasyou.com/blog/2014/02/21/hugo</id>
    <content type="html"><![CDATA[<p>最近は静的サイトブームが再到来なんですかね？<strong>GoLang</strong> で作られた静的サイトジェネレータの <strong>Hugo</strong> なんていうものがありました。</p>

<p>うちのサイトも最近 Ruby の <em>Octopress</em> でサイトをリニューアルしましたが、Go にもあるんですね。</p>

<p><a href="https://github.com/spf13/hugo">spf13 / hugo</a></p>

<p><a href="http://hugo.spf13.com/">The Fast and Flexible Static Site Generator - Hugo</a></p>

<p>Go でビルドするので速いとのこと。また、Windows、Mac、Linux と環境を選ばないのがいいですね。</p>

<p>記事は <strong>Markdown</strong> で記述します。カテゴリやタグなどの情報は <strong>YAML</strong> 形式でいけます。<a href="http://octopress.org/">Octopress</a> や <a href="http://jekyllrb.com/">Jekyll</a> と似ています。</p>

<p>最近 Go が人気急上昇なので、Go の環境が手元にある人は Hugo を使ってサイトを運営してみるのもありかもです。</p>
]]></content>
  </entry>
  
</feed>
