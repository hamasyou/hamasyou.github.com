<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: C++ | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/c-plus-plus/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2014-02-13T01:25:08+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[憂鬱なプログラマのためのオブジェクト指向開発講座]]></title>
    <link href="http://hamasyou.com/blog/2004/08/10/4881356194/"/>
    <updated>2004-08-10T01:36:00+09:00</updated>
    <id>http://hamasyou.com/blog/2004/08/10/4881356194</id>
    <content type="html"><![CDATA[<p>これから<strong>オブジェクト指向</strong>をはじめる人に、超おすすめの一冊です。本書のサンプルはC++言語で書かれていますが、Javaで開発を行っている人も敬遠しないでください。ところどころに実装依存の話も出てきますが、全体的に抽象度が高いです。にもかかわらず読みやすく理解しやすく、楽しいのはなぜなんでしょう？</p>

<p>オブジェクト指向とはなんだというところから、どんな考え方が本当のオブジェクト指向なのかを気づかせてくれる、非常に秀逸な本です。繰り返し繰り返し要点を述べてくれるので、頭に残りやすいです。また、最後まで読みきれば、C++言語に関する一通りの文法も学べてしまう一石二鳥の内容となっています。</p>

<p>是非、オブジェクト指向をこれから始めるという方に、オブジェクト指向をもう一度勉強したいという人に読んでいただきたい良書です。自身を持っておすすめします。</p>

<!-- more -->




<h2>特徴</h2>


<p>本書の特徴は、段階的に繰り返し同じ事を違った角度から解説してくれるところにあります。オブジェクト指向のなんたるかが、確実に頭に残るように書かれています。それでいて、非常に読みやすくわかりやすいです。</p>

<p>一つ残念なのは、最近のUMLブームより前に発売されたこともあり、中で使われている記法はOMT記法となっています。ほとんどUMLと同じように読めるのですが、こういうところから古書の感じがしてしまうのが残念です。それでも、今読んでも他のオブジェクト指向解説本にくらべたら、まだまだ右に出るものは少ないと思います。</p>

<p>本書の目次です。</p>

<ul><li>誤解と混乱からの開放</li><li>クラスとはなにか</li><li>「データ」ではなく「クラス」である理由</li><li>私たち開発者にとってのメリットとは</li><li>なにがクラスになるのか、そしてならないのか</li><li>知られざる最重要概念</li><li>プログラムを「作らない」ためのテクニック</li><li>さらに深くシステムを洞察するために</li><li>複数の面をもつクラスの本質に迫る</li><li>オブジェクトの変化を管理するための方法</li><li>有限状態マシンの本質を追求するためには</li><li>オブジェクトの連携の把握</li><li>実際にプログラムを動かすために</li><li>オブジェクト指向に不可欠な実装技術</li><li>動くプログラムを作る</li></ul>


<p>「なにがクラスになるのか、そしてならないのか」というタイトルに、非常に興味を持ったのが本書を購入したきっかけでした。非常に読みやすく、買ったその日に全部読みきったのを覚えています。その後も、3度ほど読み返してみました。それくらい面白い本だったのです。</p>

<p>すべてのオブジェクト指向開発技術者におすすめする、非常に優れた本だと思います。是非読んでみてください。</p>

<h2>覚書き</h2>




<ul><li>ユーザの視点からシステムを客観的に見たときに、そこに存在する対象(モノ)をモジュール化したモノがクラス</li><li>改良の要求は「開発時の視点」ではなく、「運用時の視点｣から常に発生する</li><li>分析段階の成果物は、環境に依存性がないものになる</li><li>システムからクラスを探し出す作業は、システムの仕様から名詞を探す作業となる</li><li>ソフトウェア構成部品としてクラスを考えるならば、内部に隠されてしまう属性よりも、外部からの窓口となる操作のほうがはるかに重要</li><li>オブジェクト指向開発では、クラスの内部の変化を状態としてとらえる</li><li>イベントとは一瞬しか存在できないもの。時間がかかるようであれば、それはもうイベントではなく一つの状態</li><li>問題領域のクラスは、基本的に処理系独自の処理や、アプリケーション独特の仕様に依存するべきではない</li></ul>




<h2>参考</h2>


<ul>
<li>オブジェクト脳を作るための本です。</li>
</ul>


<div class="rakuten"><table border="0" cellpadding="5" width="400"><tr><td valign="top"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4798104183/sorehabooks-22/" rel="external nofollow"></a><br /></td></tr></table>
</div>


<ul>
<li>オブジェクト指向についての疑問点の解消にどうぞ</li>
</ul>


<div class="rakuten"><table border="0" cellpadding="5" width="400"><tr><td valign="top"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4822281957/sorehabooks-22/" rel="external nofollow"></a><br /></td></tr></table>
</div>


<ul>
<li>これからのC++によるソフトウェア開発に欠かせない一冊になるはず</li>
</ul>


<div class="rakuten"><table width="400" border="0" cellpadding="5"><tr><td colspan="2"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4797328541/sorehabooks-22/" rel="external nofollow">G-Tools</a></font><br /></td></tr></table></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[プログラミングMicrosoft Visual C++6.0    マイクロソフト公式解説書]]></title>
    <link href="http://hamasyou.com/blog/2004/05/25/4891000503/"/>
    <updated>2004-05-25T01:39:00+09:00</updated>
    <id>http://hamasyou.com/blog/2004/05/25/4891000503</id>
    <content type="html"><![CDATA[<p>本書を墨から墨まで読めば、VisualC++マスターになれることを保障します。情報量、本の厚さ、価格、どれをとっても超一流の本書はVisualC++を使う必要のある人には必携のバイブルです。</p>

<!-- more -->


<p>この本には、まずその厚さに圧倒されます。はっきり言って辞書です辞書。この本をすべて読破したならばあなたは必ずやVisualC++マスターになれます。それくらいの情報量がこの本には載っています。</p>

<p>本の厚さに圧倒されながら少しずつ読み進めると、すらすら読めることに気づくことでしょう。そうです。この本は見た目によらず、解説が丁寧で読みやすいのです。それでも一日に100ページを読んでも2週間くらいはかかってしまうくらいのボリュームがあります。</p>

<p>めげずに最後まで読めば、VisualC++の手法だけでなく、プログラミングの考え方や良いコードの設計方法まで学べるはずです。ソースコードの実例も大量に載っていて、ソースコードを追うだけでも勉強になります。</p>

<p>すべてのVisualC++プログラマーの方へ本書をおすすめします。ただし、初級者・初心者の方はご遠慮ください。この量についていける、中級者以上のプログラマにご紹介します。
はっきり言って、バイブルです。さすがMicrosoftの公式解説書です。</p>

<ul>
<li>MicrosoftのVisualC++(現在はVisualStudio.NETに統合）のサイトです。</li>
</ul>


<p><a href="http://www.microsoft.com/japan/msdn/vstudio/default.aspx" rel="external nofollow">Microsoft Visual Studio.net</a></p>

<ul>
<li>マイクロソフト公式解説書の第二弾です。Windowsプログラミングにおけるデバッグ方法が載っています。</li>
</ul>


<p><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4891001860/sorehabooks-22" rel="external nofollow">Windowsプログラマのためのデバッグテクニック徹底解説    マイクロソフト公式解説書</a></p>

<ul>
<li>このバイブル本を買いませんか？少し高いですが損はないです。</li>
</ul>


<div class="rakuten"><table width="400" border="0" cellpadding="5"><tr><td colspan="2"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4891001860/sorehabooks-22/" rel="external nofollow">G-Tools</a></font><br /></td></tr></table></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Visual C++6.0入門   初級から学ぶVC++プログラミング]]></title>
    <link href="http://hamasyou.com/blog/2004/05/24/4894711400/"/>
    <updated>2004-05-24T05:54:00+09:00</updated>
    <id>http://hamasyou.com/blog/2004/05/24/4894711400</id>
    <content type="html"><![CDATA[<p>この本を読むとVisualC++の基本操作がマスターできますね。簡単なプログラムも作れるようになるでしょう。たとえば、HelloWorldと表示させるプログラムとかね・・・。</p>

<!-- more -->


<p>この本で学べることといったら、それぐらいしか覚えてないんですけど、たしかテキスト処理の基本ばかりのサンプルしか載っていいなかったと思います。テキスト処理は基礎中の基礎ですから必ず学ばなければいけません。</p>

<p>GUIを使ったプログラミング練習も載ってましたが、すべてテキスト処理関係。「文字の太さを変えるには」とか、「文字色を変えるには」とかそんなのばっかりです。</p>

<p>ピアソンの本にしては内容がちんけすぎるような気がします。初級者から初心者に変わるまでしか使えない参考書という位置づけでしょう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Visual C++ 言語リファレンス BlackBook]]></title>
    <link href="http://hamasyou.com/blog/2004/05/24/4844312871/"/>
    <updated>2004-05-24T05:06:00+09:00</updated>
    <id>http://hamasyou.com/blog/2004/05/24/4844312871</id>
    <content type="html"><![CDATA[<p>インプレスのBlackBookシリーズはほんとに読み応えのある本です。紙質も他の本に比べて薄く、たくさんの情報が載っているのがウリです。</p>

<!-- more -->


<p>この本は最初から最後まで通読するのではなくて、必要なところだけ必要な分読んだほうが効率がいいです。はっきり言って辞書です。</p>

<p>前半はC++の基本文法と、ライブラリルーチンの説明で、後半はVisual C++の操作説明にページが割かれています。前半で文法のチェック、後半でライブラリのチェックを行えます。</p>

<p>うーん、辞書以外の使い方が思いつかないんですが・・・。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[はじめてのVisual C++６.０]]></title>
    <link href="http://hamasyou.com/blog/2004/05/24/4774107816/"/>
    <updated>2004-05-24T03:12:00+09:00</updated>
    <id>http://hamasyou.com/blog/2004/05/24/4774107816</id>
    <content type="html"><![CDATA[<p>C++でクラスを作るサンプルをやった後、住所録プログラムで継承・動的処理、MFCへと入っていきます。段階的に勉強できるのも特徴の一つですが、作るサンプルがまた一味違って面白いものばかりです。</p>

<!-- more -->


<p>最後に作るソリティアは何度作っても飽きず、ゲーム作りの基礎を学ぶのにもうってつけのように思います。</p>

<p>よくプログラミングはサンプルに学ぶって言われますけど、まさにそのとおりと実感できる一冊でした。初心者から中級者まで読める本です。ただし、C++の基礎は載っていないので、あえて言うならば文法は一通り覚えたけど次はどうするの？って人向けです。</p>

<p>プログラムのクラスの分け方、設定ファイルの書き出す目安、ゲーム作りの基礎など、実践的な部分を丁寧に学べます。本を読み終わった後に、ゲームができてしまうというのもひとつの魅力です。
このゲームやりたさに、がんばって読み終えてしまうくらいの勢いはでてくると思います。</p>

<p>MFCを学ぶ際に、Win32APIのあり方というのも知っていたほうが良いでしょう。本書では、最初はWin32APIを使ってGUIを作成し、同じものを今度はMFCを使って実装します。基礎から学べる逸品です。</p>

<p>MFCとかWin32APIとかちんぷんかんぷんな人用にこれを紹介します。</p>

<table>
  <caption>MFC、Win32APIの参考サイト</caption>
  <tr>
    <th>用途</th><th>サイト</th>
  </tr>
  <tr>
    <td>VisualC++ をつかっていてわからないことがあったら</td>
    <td><a href="http://mfc.acty-net.ne.jp/ml/mfc/" rel="external nofollow">VC++ML</a></td>
  </tr>
  <tr>
    <td>VisualC++ と MFC について平易に解説しているサイト</td>
    <td><a href="http://www.hi-ho.ne.jp/hawk/mfc0401.html" rel="external nofollow">MFC 実践プログラミング ヒント集</a></td>
  </tr>
  <tr>
    <td>MFCプログラミングテクニックを教えてくれるサイトです。</td>
    <td><a href="http://akky.cjb.net/mfc/" rel="external nofollow">MFCプログラミング</a></td>
  </tr>
  <tr>
    <td>Win32APIのサンプルコードが満載</td>
    <td><a href="http://homepage1.nifty.com/MADIA/vc/api/" rel="external nofollow">C/C++によるWin32API </a></td>
  </tr>
</table>




<h4>最後はやっぱり本の紹介です。</h4>


<p><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4756136001/sorehabooks-22" rel="external nofollow">プログラミングWindows第5版〈上〉Win32 APIを扱う開発者のための決定版!    Microsoft Programming Series</a></p>
]]></content>
  </entry>
  
</feed>
