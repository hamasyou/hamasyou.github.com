<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: UML | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/uml/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2014-02-13T09:52:23+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[オブジェクト指向でなぜつくるのか―知っておきたいプログラミング、UML、設計の基礎知識―]]></title>
    <link href="http://hamasyou.com/blog/2005/11/03/4822281957/"/>
    <updated>2005-11-03T20:04:00+09:00</updated>
    <id>http://hamasyou.com/blog/2005/11/03/4822281957</id>
    <content type="html"><![CDATA[<p>『なぜシリーズ』の第5弾となるオブジェクト指向に関する書籍です。「<strong>オブジェクト指向</strong>」というキーワードは一時期Buzzwordでした。それは、オブジェクト指向を<strong>プログラミングの道具</strong>として説明したり、<strong>概念</strong>だけを説明したり、<strong>UMLを使った設計技法</strong>のことを指して説明していたりと、知らない人が聞いたら混乱してしまうような説明しかされていなかったためです。</p>

<p><blockquote><p>実際には「オブジェクト指向が現実世界をそのままソフトウエアに表現する技術である」という説明は間違いです。</p></p><p><p></p><footer><strong>本書</strong></footer></blockquote></p>

<p>この説明が示すように、オブジェクト指向を本当に理解し、使いこなすには、オブジェクト指向に関する誤解を解く必要があると思います。本書はその手助けをしてくれる、正真正銘、本物のオブジェクト指向入門書です。</p>

<p>オブジェクト指向のキーワードに惑わされて疲れてしまった人、オブジェクト指向って難しそうだから敬遠していた人、オブジェクト指向を理解してみたい人、おすすめの一冊です。</p>

<!-- more -->




<h2>特長</h2>




<h3>オブジェクト指向の概念</h3>


<p>オブジェクト指向を理解するには、まず2つのことを理解しなければなりません。</p>

<ol><li><strong>オブジェクト指向が現実世界をそのまま映し出すのは間違い</strong></li><li><strong>オブジェクト指向はソフトウェア開発を楽にするためのもの</strong></li></ol>


<p>まずは、オブジェクト指向の間違った理解や誤解を解き放つことから始まります。これまでは、混乱し、間違った理解のまま進んでしまったため、いまいちオブジェクト指向が分からなかったのだと思います。本書では、すっきり分かりやすくオブジェクト指向の概念を説明します。</p>

<h3>プログラミング技術としてのオブジェクト指向</h3>


<p>カプセル化、ポリモーフィズム、継承のオブジェクト指向プログラミング（OOP）の三大要素を理解します。プログラミング言語に依存しない理解をすることで、どんなオブジェクト指向言語を使うときにも役に立つはずです。</p>

<h3>応用技術としてのオブジェクト指向</h3>


<p>プログラミング技術からスタートしたオブジェクト指向ですが、現在ではUMLや開発プロセスと言ったところにまで発展してきています。オブジェクト指向というキーワードを本当に理解するためには、OOPだけではなく応用技術でどのようにオブジェクト指向が語られているかを理解する必要があります。</p>

<h2>参考</h2>


<ul>
<li>言語はC++。だけどOOPを学ぶためには最高の一冊。</li>
</ul>


<div class="rakuten"><table width="400"  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4881356194/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>オブジェクト指向開発の奥義、教えます。</li>
</ul>


<div class="rakuten"><table  width="400" border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4797323361/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>オブジェクト指向の神髄。すべてがここに詰まっています。現場向き</li>
</ul>


<div class="rakuten"><table  width="400" border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4822282376/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユースケース入門―ユーザマニュアルからプログラムを作る]]></title>
    <link href="http://hamasyou.com/blog/2005/09/23/4894713772/"/>
    <updated>2005-09-23T10:59:00+09:00</updated>
    <id>http://hamasyou.com/blog/2005/09/23/4894713772</id>
    <content type="html"><![CDATA[<p>本書は、<strong>ICONIX</strong>アプローチに焦点を当て、その中で<strong>ロバストネス分析</strong>の方法について解説している数少ない書籍です。</p>

<p><strong>ICONIXアプローチ</strong>とは、ユースケースからオブジェクトモデルを導き出すアプローチのことです。ユースケースは、ユーザの視点で書かれたシステムが提供するサービスを表すものです。ユースケースを中心にモデルをおこすことで（<strong>ユースケース駆動</strong>）、要求が変化した場合にどこのモデルを変更すればよいか分かりやすくなります。</p>

<p><strong>ロバストネス分析</strong>とは、ICONIXアプローチにおいて、ユーザの要求（What）をモデルの実装（How）に結びつける役割を持ちます。これにより、要求から実装、実装から要求のトレーサビリティが向上します。</p>

<p>本書は、あまり語られることの多くないICONIXアプローチとロバストネス分析を説明するものです。非常に本質を突いた説明がされていて、ユースケースの実用的な使い方についても学べます。</p>

<p>薄い本ながら（140ページ弱）、その内容の濃さは読んでみればわかるでしょう。非常にためになる良い本です。対象読者は、ユースケースについては知っているが使い方がいまいちよく分からない人、ロバストネス分析に興味がある人です。</p>

<!-- more -->




<h2>特長</h2>




<h3>ユースケースはユーザマニュアルだ</h3>


<p>ユースケースは、ユーザから見たシステムの機能を表します。それは、ユースケースを読めば、ユーザはシステムの使い方が分かるからです。逆に言うと、ユースケースは、読めばシステムが使えるようなものでなければならないと言うことです。</p>

<p>ユーザの視点からかかれるものがユースケースである、ということは、ユースケースによる設計は、ユーザの立場からシステムを作り上げていくということになります。ユースケースには、GUIの設計が含まれています。とはいっても、ユースケースにはそれがボタンなのかリストボックスなのかという、GUIの詳細は含まれていません。あくまでGUIの本質（何をするとどうなるのか）だけが書かれているべきです。</p>

<p>ユースケースを中心にシステムを設計していくことを<strong>ユースケース駆動設計</strong>といいます。ユーザの視点でシステムを設計するため、最終的な納品物ぶれがでにくいです。いいことずくめのように聞こえるユースケース駆動設計にも、問題はあります。システムの実装に落としにくいのです。</p>

<p>ユースケースはいわば<strong>ユーザの要求（What）</strong>です。そして、システムの実装は（How）です。この<strong>WhatとHowをつなげる役割</strong>をもつのが、<strong>ロバストネス分析</strong>なのです。</p>

<p>ロバストネス分析について、詳しく理解したい人は、この書籍を読むか、『<a href="http://www.amazon.co.jp/exec/obidos/ASIN/4797320192/sorehabooks-22/250-6449154-9758645?%5Fencoding=UTF8&camp=247&link%5Fcode=xm2" rel="external nofollow">ワークブック形式で学ぶUMLオブジェクトモデリング―「ユースケース駆動」でソフトウェアを開発する</a>』がおすすめです。</p>

<h2>特長</h2>


<ul>
<li>ユースケース駆動でソフトウェアを開発するには！</li>
</ul>


<div class="rakuten"><table width="400"  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4797320192/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>ユースケースの本質をつかむ</li>
</ul>


<div class="rakuten"><table  width="400" border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4798101273/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>とても読みやすく、実践的</li>
</ul>


<div class="rakuten"><table width="400"  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4894711869/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UMLによるオブジェクト指向モデリングセルフレビューノート]]></title>
    <link href="http://hamasyou.com/blog/2005/09/11/4886487440/"/>
    <updated>2005-09-11T17:35:00+09:00</updated>
    <id>http://hamasyou.com/blog/2005/09/11/4886487440</id>
    <content type="html"><![CDATA[<p>本書は、モデルを検証する視点を学ぶ本です。UMLで書かれたモデルの<strong>適切さ</strong>、<strong>正しさ</strong>をどのような観点で評価すればよいか学べます。</p>

<p>クラス図を描いたけど、本当にコレでよいのか。シーケンス図上ではこうなっているけど、コレで上手くいくのか。こんな疑問に答えてくれるのが本書です。主に<strong>クラス図</strong>、<strong>シーケンス図</strong>、<strong>ユースケース図</strong>について書かれています。</p>

<p>対象読者は、初心者モデラー、設計を行うSEです。プログラマーにはあまり関係ない内容だと思います。</p>

<p>「<strong>設計に正解はない</strong>」と言われますが、十分に適切であるかの評価は出来ます。それは本書を読めば分かるでしょう。</p>

<!-- more -->




<h2>特長</h2>




<h3>モデルを検証する基本ワザ</h3>


<p>モデルを検証する方法が3種類取り上げられています。<strong>読んでみる</strong>、<strong>数えてみる</strong>、<strong>絵として見る</strong></p>

<p>それが正しいかどうかはテストすることで分かります。プログラムが正しいことを確認するのにテストを行うように、モデルが正しいことを確認するのにテストを行う必要があります。</p>

<p>本書は、上記の3つのワザを使って、<strong>モデルのテスト</strong>を行います。このワザを身に付ければ、人の書いたモデルを評価できますし、自分のモデルは洗練することが出来ます。</p>

<h2>参考</h2>


<ul>
<li>モデルに本質を描くために参考になる本</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4798107123/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>UMLを実践で使うために</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4894713861/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>モデリングのエッセンス教えます</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4822221180/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[オブジェクト開発の神髄〜UML 2.0を使ったアジャイルモデル駆動開発のすべて]]></title>
    <link href="http://hamasyou.com/blog/2005/09/03/4822282376/"/>
    <updated>2005-09-03T09:14:00+09:00</updated>
    <id>http://hamasyou.com/blog/2005/09/03/4822282376</id>
    <content type="html"><![CDATA[<p>本書は、ソフトウェア開発における<strong>上流工程から設計</strong>までをカバーした本です。アジャイルにソフトウェア開発を行う方法について書かれています。要求をユースケースにまとめ、概念モデルを書き、ビジネスプロセスをモデル化して、設計を行う。一連のソフトウェア開発の流れに沿って、アジャイルに進めるにはどうしたらよいのか、どうUMLを活用したらよいのかについて説明されている本です。</p>

<p>筆者の経験則が随所にちりばめられており、経験の少ない人でも理解しやすくなっています。UMLを使ったモデリングの方法について書かれている本ですが、図の書き方については書かれていません。本書は<strong>使い方の本</strong>です。</p>

<p>非常に読みやすい内容で、納得できる部分も多いです。重要事項についてだけ書かれている、そんな感じのする書籍になっています。このボリュームで4,200円は安いと思います。</p>

<!-- more -->




<h2>特長</h2>




<h3>UMLの書き方によらない本質</h3>


<p>タイトルには『UML2.0を使ったアジャイルモデル駆動開発のすべて』とあり、よくあるUMLの書き方についての書籍かと思われるかもしれません。</p>

<p>確かに、UMLの記法は使われています。しかし、本書で使われているUMLは厳密なUMLとは少し違います。それは、本書がアジャイル開発を元に書かれているからです。使わないドキュメントに力を注ぐよりも、他にやるべきことがあるはずだというスタンスです。そのため、本書で扱われているすべてのことが、必要最低限の重要な事柄なのです。</p>

<p>『オブジェクト開発の神髄』とは、お客様の利益を生み出すための究極の開発方法論なのかも知れません。</p>

<h2>参考</h2>


<ul>
<li>さらに設計よりにUMLを使う方法について書かれています。</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4894713861/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>実装よりの本です。結合度、凝集度といったOOPのキーワードについて深く知りたい人におすすめです。</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4797323361/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>UMLを使ってモデルを書くときには「エッセンス」が大切です。</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4798107956/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MDA(モデル駆動型アーキテクチャ)導入ガイド―UMLを基盤としたオブジェクト指向設計・開発手法]]></title>
    <link href="http://hamasyou.com/blog/2005/08/14/4844318691/"/>
    <updated>2005-08-14T12:31:00+09:00</updated>
    <id>http://hamasyou.com/blog/2005/08/14/4844318691</id>
    <content type="html"><![CDATA[<p><strong>MDA（モデル駆動型アーキテクチャ）</strong>とは、UMLなどの標準モデリング技術を使ってモデルを作り、モデルをベースにソフトウェア開発を行っていくというものです。プラットフォームに依存しないモデル（PIM）からプラットフォームに依存するモデル（PSM）へ自動的に変換してくれるツールを用いて開発を行います。</p>

<p>本書は、MDA開発のプロセスと、モデルの変換について、現時点で使えるツールについて書かれています。MDAという考え方は、比較的あたらしく、ツールのサポートが不十分です。今の段階でMDAをプロジェクトで活用することはまだ不安があります。</p>

<p>対象読者は、プロジェクトマネージャ、開発者です。現時点で実務に使うのに不安があるMDAですが、そのメリットと仕組みを知っておくと今後のパラダイムシフトにすばやく対応できるでしょう。</p>

<p>本書にはプログラムコードはほとんど出てきません。擬似コードかモデルが出てくるだけです。つまり、本書で解説していることがMDAの概念や仕組みに特化していると言うことです。</p>

<!-- more -->




<h2>特長</h2>




<h3>Platform Independent Model（PIM）とPlatform Specific Model（PSM）</h3>


<p>MDAでは2つのモデルを定義しています。一つは、プラットフォーム独立モデル（PIM）です。もう一つはプラットフォーム特化モデル（PSM）です。PIMからPSMの変換を行うツールを用いて、MDAはソフトウェア開発を行っていきます。</p>

<p>PIMは、モデルが実行される環境に依存していないモデルです。つまり、WindowsでもLinuxでも、TomcatでもJBossでも、どんな環境でも動くことを保証しているモデルです。</p>

<p>PSMは、モデルが実行される環境に依存するモデルです。つまり、WindowsのTomcatで動くモデルと言うように、環境に特化しています。</p>

<p>PIMからPSMへ、PSMからプログラムコードへとモデルが変換されていくプロセスが、モデル駆動型開発と呼ばれるゆえんです。確かにモデルからプログラムコードへと自動で変換されるのはメリットが大きいと思います。しかし、現実的には現段階では、モデルを非常に厳密に書かなければならないし、制約を厳しくしておく必要があると思います。</p>

<p>今後、MDAがどのような発展を遂げていくのか非常に楽しみです。本書では、MDAの基本概念について主に解説しています。今後もっと実践的な書籍が増えてくると思いますが、概念を押さえるには本書のような導入ガイドを読むのがいいと思います。</p>

<h2>参考</h2>


<ul>
<li>MDAの基礎知識を詳しく吸収できます。</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/479810602X/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>MDA開発のエッセンスを解説した本です。入門書的な扱いです。</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4798107336/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>かなり厳密にMDAを学びたい人向けです。</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4434038133/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>きっちりしたモデルを書くためにOCL（オブジェクト制約言語）</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4434055429/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<p>　</p>
]]></content>
  </entry>
  
</feed>
