<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: GitHub | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/github/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2014-02-13T00:13:34+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GitHubとOctopressで始める無料ブログ]]></title>
    <link href="http://hamasyou.com/blog/2014/02/12/github-octopress/"/>
    <updated>2014-02-12T19:33:48+09:00</updated>
    <id>http://hamasyou.com/blog/2014/02/12/github-octopress</id>
    <content type="html"><![CDATA[<p>長いもので、hamasyou.com を初めてから9年経ちました。何年かに一回ブログのデザインを更新したくなるのって普通ですよね。</p>

<p>今までずっと <em>MovableType</em> を使っていたんですが、markdown で書きたくなったのと、MovableType のデザインのいじり方を忘れてしまったため、ブログ環境を一新する決意をしました。</p>

<p>今回作ったブログ環境は次のとおり。</p>

<dl>
<dt>公開用のサーバ</dt>
<dd><a href="http://pages.github.com/" rel="external nofollow">GitHub Pages</a></dd>
<dt>ブログ編集用のCMS</dt>
<dd>ローカルマシン上に <a href="http://octopress.org/" rel="external nofollow">Octopress</a> で構築</dd>
</dl>

<!-- more -->


<h2>GitHub Pages とは</h2>

<p><a href="http://pages.github.com/" rel="external nofollow"><img title="GitHub Pages" class="img-thumbnail" src="http://hamasyou.com/images/2014-02-12-github-octopress.png" alt="http://pages.github.com/" width="400" height="310" /></a></p>

<p>GitHub Pages とは簡単に言うと GitHub のリポジトリを Web サーバとして利用できるサービスです。リポジトリに HTML ファイルをプッシュすると公開される仕組みです。</p>

<p>これがなかなかよく出来ていて、静的ページしか使えませんが、404ページの設定や DNS の CNAME の設定なんかもできます。</p>

<p>リポジトリ名がサイトのホスト名になります（例: <code>http://hamasyou.github.io</code>）。ドメインを取得すれば当然、独自ドメインで運用するなんてことも可能です。</p>

<h2>Octopress とは</h2>

<p><a href="http://octopress.org/" rel="external nofollow"><img title="Octopress" class="img-thumbnail" src="http://capture.heartrails.com/400x300?http://octopress.org/" alt="http://octopress.org/" width="400" height="300" /></a></p>

<p>Octopress は Ruby 用の GitHub Pages スターターキットです。内部で <code>Jekyll</code> や <code>rdiscount</code> を使っていて、簡単に GitHub Pages を利用する環境が構築できて、markdown ですぐに記事を書き始められます。</p>

<p>Octopress の詳しい使い方は <a href="http://morizyun.github.io/blog/octopress-gitpage-minimum-install-guide/" rel="external nofollow">OctopressでGitHub無料ブログ構築。sourceをBitbucket管理。簡単ガイド！ - 酒と泪とRubyとRailsと</a> が参考になります。</p>

<p>Octopress には様々なテーマが用意されていて、うちのサイトもテーマを使っています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub で複数アカウントを使う]]></title>
    <link href="http://hamasyou.com/blog/2010/10/28/github/"/>
    <updated>2010-10-28T14:37:00+09:00</updated>
    <id>http://hamasyou.com/blog/2010/10/28/github</id>
    <content type="html"><![CDATA[<p>GitHub で複数アカウントを使った場合に、SSH の鍵管理周りではまったので解決方法のメモです。</p>

<p>Special Thanks <a href="http://twitter.com/bongole" rel="external nofollow">@bongole</a></p>

<!-- more -->




<h2>GitHub で複数アカウントを使う</h2>


<p>GitHub で複数アカウントを利用するときの設定です。</p>

<p>GitHub は、アカウントと紐付けて SSH の鍵を管理します。なので、複数アカウントを利用すると同じ SSH の鍵を使えません。</p>

<p>そこで、複数アカウントの SSH の鍵の管理をする方法のメモです。</p>

<p class="option">この記事で別アカウントとして作成するアカウントは mountposition とします。記事中に出てくる mountposition という文字は適宜ご自分の別アカウントのIDに変更してください。</p>




<h3>git の SSH の動き</h3>


<p>git で push を行うと、デフォルトで ~/.ssh/id_rsa 秘密鍵が利用されます。</p>

<p>デフォルトのファイル名以外の秘密鍵を使いたい場合には、 ~/.ssh/config ファイルを設定します。</p>

<p><section></p>

<h4>~/.ssh/config</h4>




<pre>Host github.com
 User git
 Port 22
 Hostname github.com
 IdentityFile ~/.ssh/github_id_rsa
 TCPKeepAlive yes
 IdentitiesOnly yes </pre>


<p></section></p>

<p><em>IdentityFile</em> で指定した鍵ファイルが github.com への接続で使われるようになります。</p>

<h3>GitHub の別アカウント用の SSH 鍵を用意する</h3>


<p>ssh-keygen を利用して、別アカウント用の秘密鍵を作成します。作った秘密鍵と対になる公開鍵を GitHub に登録します。</p>

<p>その後、~/.ssh/config に次の部分を追加します。</p>

<p><section></p>

<h4>~/.ssh/config 追記</h4>




<pre># Client user (mountposition)
Host github-mountposition
  HostName github.com
  User git
  IdentityFile ~/.ssh/github_mountposition_rsa
</pre>


<p></section></p>

<p>github-mountposition というホストへの SSH 接続には ~/.ssh/github_mountposition_rsa 鍵ファイルを使うという設定です。</p>

<p>github-mountposition というのは、この後 git remote add で設定する GitHub 上の別アカウントが所有するリポジトリのホストです。</p>

<p class="option">GitHub ではアカウントごとのリポジトリへ、 git@github-{client名} でつなぐことができるようです。</p>




<h3>git remote add で GitHub 上のリポジトリにアクセスできるようにする</h3>


<p>git remote add を使って GitHub 上のリポジトリへアクセスできるようにします。このとき、通常は git@github.com:{リポジトリのURL} とするところを、git@github-{アカウント名}:{リポジトリのURL} に変更していることに注意してください。</p>

<pre class="console">$ <kbd>git remote add origin git@github-mountposition:{リポジトリのURL}</kbd></pre>


<p>GitHub は SSH でつなぐ先を通常の github.com とは別に、github-{アカウント名} でもアクセスできるようになっています。この github-{アカウント名} という形式を用いて git から SSH で接続することによって、~/.ssh/config の HOST の設定を切り分けられるようにしています。</p>

<h3>~/.ssh/config の IdentityFile を複数書くことで対応する？</h3>


<p>いろいろなところで、~/.ssh/config ファイルの IdentityFile は複数書くことができるとあったのですが、実際にやってみるとうまくいきませんでした。</p>

<h3>Special Thanks</h3>


<p>Special Thanks <a href="http://twitter.com/bongole" rel="external nofollow">@bongole</a></p>
]]></content>
  </entry>
  
</feed>
