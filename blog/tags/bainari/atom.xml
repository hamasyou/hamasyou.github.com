<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: バイナリ | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/bainari/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2014-02-14T13:56:43+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CODE コードから見たコンピュータのからくり]]></title>
    <link href="http://hamasyou.com/blog/2004/10/23/4891003383/"/>
    <updated>2004-10-23T23:09:00+09:00</updated>
    <id>http://hamasyou.com/blog/2004/10/23/4891003383</id>
    <content type="html"><![CDATA[<p>「コンピュータの仕組みを知りたいとは思わないかい？」一般にコンピュータを使っている人ならこの質問には「NO」と答えるだろう。電子工学を勉強している学生の中には、少なからず「YES」と答える人もいるかもしれない。本書はモールス信号からコンピュータの仕組みを理解するところまで持っていってしまうところがすごい。つまりコンピュータのことを知らなくても（モールス信号さえ知っていれば）誰でもコンピュータの仕組みまで理解できてしまうのである。ただし、順を追って読み進めていけばの話ではあるが・・・。</p>

<p>コンピュータの動作原理は「0」と「1」との組み合わせがすべてである。コンピュータを知っている人なら誰でもこう答えるだろう。しかし、最近のコンピュータは音楽を聴いたり、ゲームをしたり、写真を取り込んだりできるのにほんとうに「0」と「1」とでしか出来ていないのかと思う人もいると思う。</p>

<p>500ページという本のなかに、著者のコンピュータを知ってもらいたいという熱い想いを感じ取って欲しいと思います。基本情報技術者試験の試験勉強でコンピュータの仕組みを勉強するよりも、はっきり言って本書で仕組みを理解したほうが深く身につきます。<strong>決して簡単には読み進められないかもしれません。</strong>しかし確実に感動を覚えることはできると思います。少し時間をとって頭の体操にどうぞ！</p>

<!-- more -->




<h2>解説</h2>


<p>コンピュータというものはどういうものかというのを、原子レベル(これ以上分解できない位)から解説しています。モールス信号とバイナリ(0か1のどちからしかとり得ないもの)のようにコンピュータにかかわりのない人でも理解しやすい例を使って、詳しく解説しています。</p>

<p>本書の目的は「<strong>コンピュータの仕組みを理解すること</strong>」です。そのためにとてもユニークな例を取り出して解説しています。途中、実際にコンピュータが自分で作れてしまう程低レベル(銅線と電球が出てきます)なところまででてきますので、電子工学の知識が多少あったほうが理解しやすいかもしれません。ただ、最初から順番に理解して読み進めていく限り、絶対に最後まで読めます。</p>

<p>コンピュータの本当の仕組みを理解したい人や、学校の課題でコンピュータ基盤を作成している学生、物事の仕組みを理解せずにはいられない理系人間は、本書を最初に読んだほうがいいと思います。<strong>読み物なので、肩を張らずに読み進められます。</strong>多少難しいかもしれませんが、頭の体操にもってこいだと思っています。</p>

<p>難しくてもコンピュータを理解したい人に本書をおすすめします。</p>

<h2>覚書き</h2>




<h3>ASCIIコードの右下にDEL記号がある理由</h3>


<p>昔はプログラムをパンチカードというものに穴を開けて作っていました。パンチカードは一度穴を開けると二度と元に戻せないため、間違えた場合にはパンチカードを無効にする必要がありました。簡単に無効なパンチカードかどうかを判定するために、「間違えた場合には、すべての穴を開ける」という方法でパンチカードを無効化していました。この理由から、パンチカードの最後にはDELという制御コードが設けられていました。</p>

<p>現在でもその風習が残っていて、ASCIIコードの最後にDELの制御記号があります。他の制御コード(例えばビープ音を鳴らす)は最初の方に固まっているのに、DELだけが他の制御コードと離れた場所にあるのは、こういう理由だそうです。</p>

<h4>参考</h4>


<p><a href="http://www.psl.ne.jp/perl/pdojo00b.html" rel="external nofollow">ASCIIコード一覧表</a></p>

<h2>参考</h2>


<ul>
<li>図入りで仕組みを理解したい人向け</li>
</ul>


<div class="rakuten"><table border="0" cellpadding="5" width="400"><tr><td colspan="2"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4883373347/sorehabooks-22/" rel="external nofollow">G-Tools</a></font><br /></td></tr></table>
</div>


<p>　</p>
]]></content>
  </entry>
  
</feed>
