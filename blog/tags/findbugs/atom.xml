<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: FindBugs | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/findbugs/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2014-07-31T11:14:36+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[開発のプロが教える標準FindBugs完全解説]]></title>
    <link href="http://hamasyou.com/blog/2005/08/27/4756146554/"/>
    <updated>2005-08-27T09:09:00+09:00</updated>
    <id>http://hamasyou.com/blog/2005/08/27/4756146554</id>
    <content type="html"><![CDATA[<p><strong>FindBugs</strong>はJavaのコードインスペクションツールです。コードインスペクションとは、コードが正しく書けているかをチェックすることです。コンパイルは通るけど、明らかにバグが埋め込まれているというコードを検査するのに使われます。</p>

<p>FindBugsは、Javaのバグパターンをチェックしてくれる優れたツールです。Eclipseのプラグインとしても提供されていて、Javaプログラマには必須のツールだと言えます。
<a href="http://findbugs.sourceforge.net/index.html" rel="external nofollow">FindBugs (Eclipse Plugin)</a></p>

<p>本書は、FindBugsで検知されるバグパターンが起こる原因とその対処法を記したものになっています。FindBugsのバグパターンは結構な数があり、明らかにバグだと分かるものから一見すると正しいコードに見えるが実はバグといったものまで検知してくれます。</p>

<p>内容的には『<a href="http://www.amazon.co.jp/exec/obidos/ASIN/4894714361/sorehabooks-22/249-1540022-3818763?%5Fencoding=UTF8&camp=247&link%5Fcode=xm2" rel="external nofollow">Effective Java プログラミング言語ガイド</a>』に似たものになっています。ただし、本書の方はバグパターンについて本なので、プログラミング経験者なら「覚えがある」問題が多いと思います。</p>

<p>プログラミング初心者から、経験者まで幅広くおすすめできる一冊です。堅牢（ロバストネス）なコードで品質のよいプログラムを作りたい人は本書を一読すべきでしょう。『Effective Java』以来の、かなりおすすめな一冊です。</p>

<!-- more -->




<h2>特長</h2>




<h3>なじみのあるバグばかり</h3>


<p>どこかで味わったことがあるバグパターンばかりが載っています。もしかしたら今でもこんな風に書いているプログラマもいるかもしれません。誰かに指摘されるか、実際にバグが発生しなければ気づかなかった「<strong>実はバグが埋め込まれている</strong>」コードを回避するために本書は使えます。</p>

<h3>バグのサンプルコードと修正後のサンプルコードが共に載っている</h3>


<p>バグコードについていくら文章で書かれていても、実際にサンプルがなければ自分がソースコードを書いているときにバグだと気づくことは難しいでしょう。本書は、<strong>バグになるサンプルソースコード</strong>と<strong>修正後のサンプルソースコード</strong>の両方が載っています。</p>

<p>バグになる原因と、その解決策についてもしっかり理解が出来るように書かれているのでプログラミング経験が少なくとも理解することは容易だと思います。</p>

<h2>参考</h2>


<ul>
<li>なにはなくともEffective Java</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4894714361/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>リファクタリングにデザインパターンを適用する</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4822282384/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>Java言語を理解するにははずせない一冊</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4894713438/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>


<ul>
<li>初心者から上級者にレベルアップするための一冊</li>
</ul>


<div class="rakuten"><table  border="0" cellpadding="5"><tr><td colspan="2" ><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4894712741/sorehabooks-22/" rel="external nofollow">G-Tools</a></font></td></tr></table></div>



]]></content>
  </entry>
  
</feed>
