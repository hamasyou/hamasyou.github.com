<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: コードレビュー | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/kodorebiyu/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2014-02-22T23:01:08+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[俺のコードのどこが悪い?―コードレビューを攻略する40のルール]]></title>
    <link href="http://hamasyou.com/blog/2011/06/06/4798029181/"/>
    <updated>2011-06-06T00:01:00+09:00</updated>
    <id>http://hamasyou.com/blog/2011/06/06/4798029181</id>
    <content type="html"><![CDATA[<p>本書は、プログラミング後のコードレビューを行う視点で、どういった点を確認すれば良いのかを教えてくれるものです。</p>

<p>ソースコードレビューの目的については本書では触れられていませんが、僕が考えるソースコードレビューの目的は、<strong>コードの品質を高める</strong>ためです。</p>

<p>テストではソースコードの品質は高められません。単体テストはあくまでも、コードが意図したどおりに書かれているかを確認するものになります。<b>品質は、ソースコードを書くこと（書き直すこと）でしか高められません。</b></p>

<dl><dt>他人の目から見ることで複雑なところがわかる</dt>
<dd><p>自分でコーディングしているときは気づきにくい、処理の複雑な部分が他人の目によって明らかになる</p></dd>
<dt>他人の経験を生かせる</dt>
<dd><p>リファクタリングが必要な部分や、もっとシンプルで効率のよいコードに直せるところを指摘してもらえる</p></dd></dl>


<p>本書では、こういった他人の目から見たコードの注意点を勉強できるものになっています。</p>

<!-- more -->


<p>本書で項目に挙げられているレビュー観点は、プログラミングの基本的なところでありながら、きちんと教育を受けてこなかったプログラマには気づきにくい点が多くあると思いました。</p>

<p>本書でレビュー観点を学ぶとともに、自分がコーディングするときにはこう言ったところに注意してコードを書いていくことで、品質の高いコードがかけるようになると思います。</p>

<p>初心者プログラマ、社会人でプログラマとしてデビューした人におすすめです。</p>
]]></content>
  </entry>
  
</feed>
