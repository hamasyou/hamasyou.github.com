<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Node.js | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/tags/node-dot-js/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2017-12-22T11:43:15+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[シングルページWebアプリケーション ―Node.js、MongoDBを活用したJavaScript SPA]]></title>
    <link href="http://hamasyou.com/blog/2015/12/16/9784873116730/"/>
    <updated>2015-12-16T09:12:25+09:00</updated>
    <id>http://hamasyou.com/blog/2015/12/16/9784873116730</id>
    <content type="html"><![CDATA[<p>読了。後で書く。</p>

<!-- more -->


<h2>目次</h2>

<ul>
<li>まえがき</li>
<li>はじめに</li>
<li>本書について</li>
<li>I部　SPAの紹介</li>
<li>1章　最初のシングルページアプリケーション

<ul>
<li>1.1　定義、簡単な歴史、重点事項</li>
<li>1.2　最初の SPAを構築する</li>
<li>1.3　適切に記述されたSPAのユーザメリット</li>
<li>1.4　まとめ</li>
</ul>
</li>
<li>2章　JavaScriptのおさらい

<ul>
<li>2.1　変数スコープ</li>
<li>2.2　変数の巻き上げ</li>
<li>2.3　高度な変数の巻き上げと実行コンテキストオブジェクト</li>
<li>2.4　スコープチェーン</li>
<li>2.5　JavaScriptオブジェクトとプロトタイプチェーン</li>
<li>2.6　関数 .詳しく調べる</li>
<li>2.7　まとめ</li>
</ul>
</li>
<li>II部　SPAクライアント</li>
<li>3章　シェルの開発

<ul>
<li>3.1　シェルを完全に把握する</li>
<li>3.2　ファイルと名前空間を用意する</li>
<li>3.3　機能コンテナを作成する</li>
<li>3.4　機能コンテナをレンダリングする</li>
<li>3.5　機能コンテナを管理する</li>
<li>3.6　アプリケーション状態を管理する</li>
<li>3.7　まとめ</li>
</ul>
</li>
<li>4章　機能モジュールの追加

<ul>
<li>4.1　機能モジュール方式</li>
<li>4.2　機能モジュールファイルを用意する</li>
<li>4.3　メソッド APIを設計する</li>
<li>4.4　機能 APIを実装する</li>
<li>4.5　頻繁に必要となるメソッドを追加する</li>
<li>4.6　まとめ</li>
</ul>
</li>
<li>5章　モデルの構築

<ul>
<li>5.1　モデルを理解する</li>
<li>5.2　モデルとその他のファイルを用意する</li>
<li>5.3　peopleオブジェクトを設計する</li>
<li>5.4　peopleオブジェクトを構築する</li>
<li>5.5　シェルでサインインとサインアウトを可能にする</li>
<li>5.6　まとめ</li>
</ul>
</li>
<li>6章　モデルとデータモジュールの完成

<ul>
<li>6.1　chatオブジェクトを設計する</li>
<li>6.2　chatオブジェクトを構築する</li>
<li>6.3　モデルにアバターサポートを追加する</li>
<li>6.4　チャット機能モジュールを完成させる</li>
<li>6.5　アバター機能モジュールを作成する</li>
<li>6.6　データバインディングと jQuery</li>
<li>6.7　データモジュールを作成する</li>
<li>6.8　まとめ</li>
</ul>
</li>
<li>III部　SPAサーバ</li>
<li>7章　 Webサーバ

<ul>
<li>7.1　サーバの役割</li>
<li>7.2　Node.js</li>
<li>7.3　高度なルーティング</li>
<li>7.4　認証と認可を追加する</li>
<li>7.5　WebSocketとSocket.IO</li>
<li>7.6　まとめ</li>
</ul>
</li>
<li>8章　サーバデータベース

<ul>
<li>8.1　データベースの役割</li>
<li>8.2　MongoDBとは</li>
<li>8.3　MongoDBドライバを使う</li>
<li>8.4　クライアントデータを検証する</li>
<li>8.5　個別の CRUDモジュールを作成する</li>
<li>8.6　チャットモジュールを構築する</li>
<li>8.7　まとめ</li>
</ul>
</li>
<li>9章　 SPAを本番環境に備える

<ul>
<li>9.1　SPAを検索エンジンに対して最適化する</li>
<li>9.2　クラウドサービスとサードパーティサービス</li>
<li>9.3　キャッシングとキャッシュバスティング</li>
<li>9.4　まとめ</li>
</ul>
</li>
<li>付録A　JavaScriptコーディング標準

<ul>
<li>A.1　なぜコーディング標準が必要なのか</li>
<li>A.2　コードレイアウトとコメント</li>
<li>A.3　変数名</li>
<li>A.4　変数の宣言と割り当て</li>
<li>A.5　関数</li>
<li>A.6　名前空間</li>
<li>A.7　ファイル名とレイアウト</li>
<li>A.8　構文</li>
<li>A.9　コードを検証する</li>
<li>A.10　モジュール用のテンプレート</li>
<li>A.11　まとめ</li>
</ul>
</li>
<li>付録B　SPAのテスト

<ul>
<li>B.1　テストモードを準備する</li>
<li>B.2　テストフレームワークを選ぶ</li>
<li>B.3　nodeunitを準備する</li>
<li>B.4　テストスイートを作成する</li>
<li>B.5　テストに合わせて SPAモジュールを調整する</li>
<li>B.6　まとめ</li>
</ul>
</li>
<li>索引</li>
</ul>

]]></content>
  </entry>
  
</feed>
