<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Blog | それはBooks]]></title>
  <link href="http://hamasyou.com/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://hamasyou.com/"/>
  <updated>2014-03-05T13:31:34+09:00</updated>
  <id>http://hamasyou.com/</id>
  <author>
    <name><![CDATA[hamasyou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ムームードメイン+GitHub Pagesで独自ドメインを使う方法]]></title>
    <link href="http://hamasyou.com/blog/2014/03/05/github-pages-custom-domain/"/>
    <updated>2014-03-05T12:02:07+09:00</updated>
    <id>http://hamasyou.com/blog/2014/03/05/github-pages-custom-domain</id>
    <content type="html"><![CDATA[<p>GitHub Pages を Naked Domain（サブドメインをつけない hamasyou.com みたいなやつ）で運用する場合の手順です。</p>

<p><span class="small">GitHub Pages をサブドメイン（www.hamasyou.com みたいなやつ）で運用する場合は、DNS サービスの <strong>CNAME</strong> を <strong>hamasyou.github.io</strong> に設定すれば問題ないのでこの記事は読む必要がありません。</span></p>

<p>hamasyou.com はムームードメインで取得していますので、ムームードメインを元に説明します。が、ムームードメインに限らず、Apex Alias を設定できない DNS サービスを使うときの参考にしてください。
なんでこんな事をメモするかというと、GitHub Pages を独自ドメインで運用する際に Apex Alias を使わないと <strong>302 Found</strong> のステータスコードが返ってきて、SEO 的に嫌なのと <em>Facebook のシェアで404 Not Found が出てしまう</em> からです。</p>

<p><a href="http://subosito.com/fix-302-redirect-response-for-github-hosted-site">Fix 302 Redirect Response For GitHub Hosted Site</a></p>

<p>別に 302 Found がでても構わないっていうひとは GitHub Pages のヘルプを参考にしてやってみてください。</p>

<p><a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">Setting up a custom domain with Pages - GitHub Help</a></p>

<!-- more -->


<h3>やりたいこと</h3>

<p>やりたいことの整理です。</p>

<ul>
<li>GitHub Pages を hamasyou.com で運用する</li>
<li>www.hamasyou.com を hamasyou.com の CNAME に設定する</li>
</ul>


<p>hamasyou.com の A レコードを GitHub Pages の IP に設定するだけだと CDN が効かないし、ステータスコードが302で返ってくることがあるのでちゃんと200で返して欲しい。</p>

<h3>1. 独自ドメインを取得する</h3>

<p>まず、独自ドメインを持っていない場合はドメインを取得しましょう。
僕はすでにムームードメインでドメインを取得していたのでアレですが、もしこれからドメインを取るなら、Apex Alias が使えるサービスで取ったほうがいいかもしれません。
そのほうが幸せになれるかも。</p>

<h3>2. Apex Alias を設定する</h3>

<p>ムームードメインのように、Apex Alias も使えないし、Naked Domain に CNAME を割り当てられないサービスの場合は、レンタル DNS サービスを利用します。
<strong>Gehirn DNS</strong> がドメイン2つまで無料で使えるので、今回はここを利用しました。</p>

<p><a href="http://www.gehirn.jp/dns.html">Gehirn DNS</a></p>

<p>アカウント登録をして、ドメインの認証をまずは行います。TXT レコードを使って認証していきます。出てくるダイアログをよく読めば出来ると思います。</p>

<p><a href="http://support.gehirn.jp/manual/dns/domain/">独自ドメインを追加する方法 - Gehirn DNS</a></p>

<p>次に、Apex Alias を登録します。手順は次のサイトを見れば分かると思います。</p>

<p><a href="http://news.gehirn.jp/information/325/">Gehirn DNS、ホスト名無しのドメインにエイリアス機能をサポート - ゲヒルンニュース</a></p>

<p>コントロールパネルで CNAME も登録します。www.hamasyou.com を hamasyou.com に向けたいので、そのように設定します。
レコードの登録のさいは、末尾に <code>.</code> が付くので忘れずに。</p>

<p><img src="/images/2014-03-05-github-pages-custom-domain-01.png" alt="登録後01" /></p>

<p><img src="/images/2014-03-05-github-pages-custom-domain-02.png" alt="登録後02" /></p>

<p>Gehirn での設定は以上です。つぎは、ムームードメインのネームサーバの設定をします。</p>

<h3>3. ネームサーバを変更する</h3>

<p>ムームードメインの管理画面に入って、「ネームサーバ設定」で「弊社サービス以外のネームサーバ」を選びます。
ここで、Gehirn のネームサーバの情報を入力します。</p>

<p><img src="/images/2014-03-05-github-pages-custom-domain-03.png" alt="ネームサーバの設定" /></p>

<p>これで、hamasyou.com の DNS レコードが Gehirn のネームサーバで参照されて、Alias レコードで hamasyou.github.io を見に行くようになります。
Apex Alias を設定することで、GitHub Pages の CDN が利用出来るようになるので、参照のパフォーマンスもちょっとはあがるはず！らしいです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[canonicalなURLってなにがいいんだろう？]]></title>
    <link href="http://hamasyou.com/blog/2014/03/04/canonical-url/"/>
    <updated>2014-03-04T12:27:08+09:00</updated>
    <id>http://hamasyou.com/blog/2014/03/04/canonical-url</id>
    <content type="html"><![CDATA[<p>ちょっと疑問に思ったこと。Web の SEO をやっていると <strong>canonical</strong> ページっていうのを聞いたことがあるとおもいます。
canonical ページとは、Google 先生曰く「<em>複数の類似した内容のページの中で優先されるページです。</em>」だそうです。
僕は <strong>URL の正規化</strong> に使うものだという認識ですが、間違ってませんよね？？</p>

<p>で、この canonical URL ってどう付けたらいいんだろう？っていう疑問です。</p>

<!-- more -->


<h2>canonical URL ってどっち？</h2>

<h3>RESTful リソースの URL</h3>

<p>Web サービスやっていると、<strong>RESTful</strong> な URL 設計大事！ってなりますよね。
Rails なんかをやっていると、ルーティングが自動的に RESTful になってて便利です。こんな感じ。</p>

<pre><code class="console-raw">
       hypermedia GET    /hypermedia(.:format)            hypermedia#index
                  POST   /hypermedia(.:format)            hypermedia#create
  new_hypermedium GET    /hypermedia/new(.:format)        hypermedia#new
 edit_hypermedium GET    /hypermedia/:id/edit(.:format)   hypermedia#edit
      hypermedium GET    /hypermedia/:id(.:format)        hypermedia#show
                  PATCH  /hypermedia/:id(.:format)        hypermedia#update
                  PUT    /hypermedia/:id(.:format)        hypermedia#update
                  DELETE /hypermedia/:id(.:format)        hypermedia#destroy

</code></pre>

<p>こういうルーティングだと、<code>http://example.com/hypermedia/1</code> みたいな感じでリソースにアクセスできます。
で、例えば、作ってる Web サービスで、<code>hypermedia/1</code> リソースの別名で、hypermedia の URL を使ってもアクセスできるようにしたい。こんな感じで。</p>

<pre><code class="console-raw">http://example.com/hamasyou.com
</code></pre>

<p>ルーティングに</p>

<pre><code class="ruby">get '*url', to: 'hypermedia#show', format: false
</code></pre>

<p>を追加しておくと <code>hypermedia#show</code> の中で <code>params[:url]</code> から <code>hamasyou.com</code> っていう値をとれるようになります。
なので、こういう URL に別名付けてちょっとクールな感じの Web サービスを気取ってみたくなりました。</p>

<h3>どっちがいいの？</h3>

<p>で、本題ですが、こういうリソースの別名扱いの URL があるとき、canonical URL として指定するのは</p>

<ol>
<li><code>/hypermedia/:id</code></li>
<li><code>*url</code></li>
</ol>


<p>のどっちがいいんだろう？という疑問です。HTML 的に書くとこんな感じ。</p>

<pre><code class="html">&lt;link rel="canonical" href="http://example.com/hypermedia/1"&gt;
&lt;link rel="canonical" href="http://example.com/hamasyou.com"&gt;
</code></pre>

<p>どっちでもいい。好みの問題って感じもしなくもないですが、皆さんどっちを選ぶのが多いんでしょう？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[読みやすいブログ、読みにくいブログ]]></title>
    <link href="http://hamasyou.com/blog/2014/02/22/readable-blog-unreadable-blog/"/>
    <updated>2014-02-22T23:07:05+09:00</updated>
    <id>http://hamasyou.com/blog/2014/02/22/readable-blog-unreadable-blog</id>
    <content type="html"><![CDATA[<p>読みやすいブログってどうしてあんなに読みやすいんでしょうかね？僕もかれこれサイトだけは9年ほどやってます。
毎日ブログを綴っているわけではないのでアレですが、ブログ歴は3〜5年くらいにはなるんじゃないかなと思います。</p>

<p>これまで3回くらいブログのデザインを変えました。デザインの賞味期限って、たぶん3年くらいなんじゃないかと思います。
Web の黎明期なんかは、<code>blink</code> タグや <code>marquee</code> タグなんかをつかって派手なアクションをするサイトが流行りました。
その後、Web デザイナさんが頑張って作るクール系のサイトが流行り、今やレスポンシブサイトですよ。</p>

<p><span class="lead">（Google で「<em>blink html</em>」を検索すると検索結果が面白いことになってますねw）</span></p>

<p>うちのサイトも一応それなりに時代の流れに合わせてデザインは変えてきたつもりですが、いつまで経っても読みやすいブログにならないのはなぜなんでしょうかね。。
文字の大きさや背景色と文字色の調和、フォントや <code>line-height</code> なんかにも気を付けているつもりなんですが、そういう小手先のテクニックに惑わされているうちは、
読みやすいブログにはならないってことですね、きっと。。。</p>

<!-- more -->


<h2>読みやすいブログの特徴</h2>

<h3>見出しが分かりやすい</h3>

<p>読みやすいブログの特徴として、僕が感じるのはやっぱり「<strong>見出しがわかりやすい</strong>」ことですね。
文字が大きいとかスペースが空いているとかだけじゃなく、なんか特徴的だったり、流し読みしても内容が頭の中に入ってくる感じ。
流し読みしても頭に入ってくるように見出しをつけるっていうのは、大事な気がします。</p>

<h3>文字が適度に大きい</h3>

<p>フォントもそうですが、フォントサイズも重要な要素だと思いました。読み物としてはやっぱり <strong>14pt〜16pt</strong> は欲しいんじゃないかと思います。
あとは <code>line-height</code> ですね。<strong>1.5em〜1.8em</strong> くらいあると、Web 上で文章を読んでも読みやすいと感じます。</p>

<p>あとは、適度に改行をいれるといいってよく書かれていますが、あんまり改行が多すぎても駄目な感じがします。。</p>

<h3>適度に画像が入っている</h3>

<p>うちのサイトは一応書評サイトなので、本の内容と感想、それにおぼえがきを中心にしています。そうすると、あんまり画像を載せることがないんですが、
<em>読みやすいサイトは適切に画像が入ってる</em> ことが多いと思います。アイキャッチの画像なんかも効果的に使われていますね。</p>

<h3>サイトの横幅が狭め</h3>

<p>最近は PC の性能もよくなって、ディスプレイサイズも大きい物が増えています。なので、PC のブラウザサイズは 1024x768 以上のものが多くなっています。
ただ、逆にスマホやタブレットで Web サイトを見る人も増えているので、二極化しているという感じでしょうか。</p>

<p>で、読みやすいサイトは、文章の一行の量が50文字以下に抑えられていることが多いと思いました。サイトのスペースを上手く使いながら、<strong>一行の長さは狭め</strong> というのが読みやすいサイトの特徴な気がします。</p>

<h2>まとめ</h2>

<p>読みやすいブログと読みにくいブログですが、うちのサイトは間違いなく <strong>読みにくいブログ</strong> なんでしょうね。。。毎日1記事で、だんだん読みやすいブログになっていけばいいなと思ってます。。
頑張ります！</p>

<p><a href="http://www.amazon.co.jp/gp/product/4799100874?ie=UTF8&amp;camp=247&amp;creativeASIN=4799100874&amp;linkCode=xm2&amp;tag=sorehabooks-22"><img src="https://images-na.ssl-images-amazon.com/images/I/519LYdJLqIL._SS300_.jpg" height="230" width="230" alt="すっきり！　わかりやすい！　文章が書ける" /></a><a href="http://www.amazon.co.jp/gp/product/4820748270?ie=UTF8&amp;camp=247&amp;creativeASIN=4820748270&amp;linkCode=xm2&amp;tag=sorehabooks-22"><img src="https://images-na.ssl-images-amazon.com/images/I/511vOWP0YeL._SS300_.jpg" height="230" width="230" alt="書くスキルUP すぐできる! 伝わる文章の書き方 確実に文章力がつく! 7つのステップ" /></a><a href="http://www.amazon.co.jp/gp/product/4620792993?ie=UTF8&amp;camp=247&amp;creativeASIN=4620792993&amp;linkCode=xm2&amp;tag=sorehabooks-22"><img src="https://images-na.ssl-images-amazon.com/images/I/510Lvq7j7BL._SS300_.jpg" height="230" width="230" alt="1時間でできる ブログ &amp; SNS　――　大きな文字で読みやすい 初心者でもらくらく" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacのApp Storeで「ほかのアカウントで使用可能なアップデートがあります」が出てアップデート出来ないときの対応]]></title>
    <link href="http://hamasyou.com/blog/2014/02/19/mac-app-store-account/"/>
    <updated>2014-02-19T11:46:56+09:00</updated>
    <id>http://hamasyou.com/blog/2014/02/19/mac-app-store-account</id>
    <content type="html"><![CDATA[<p>先日、古い MacBook Pro の Xcode のアップデートを行おうとしたときに、「<strong>ほかのアカウントで使用可能なアップデートがあります。このアプリケーションをアップデートするには、購入時に使用したアカウントでサインインしてください。</strong>」ってでてアップデートできなかったときにやった対応メモです。</p>

<!-- more -->


<p>アップデートできなかった原因は、<em>Spotlight</em> のインデックス更新を止めていたからでした。なので、Spotlight のインデックスを再構築すればアップデートできるようになりました。</p>

<p>Spotlight インデックスを再構築する以外にも、<strong>一回アプリをゴミ箱に入れてアップデート</strong> すれば直るというのも Google 先生に聞いたら教えてくれました。</p>

<h2>Spotlight インデックスの再構築手順</h2>

<p>まず、Spotlight のインデクサが起動していないと再構築できないので、先に起動させてから再構築します。</p>

<p>ターミナルを開いて次のコマンドを入力します。</p>

<p><div class="terminal-window">
          <nav class="terminal-control-window">
            <a href="#" class="terminal-close" data-rel="close">close</a>
            <a href="#" class="terminal-minimize">minimize</a>
            <a href="#" class="terminal-deactivate">deactivate</a>
          </nav>
          <h1 class="terminal-title">Terminal</h1>
          <div class="terminal-container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist</span><span class='line command'>sudo mdutil -E /</span></code></pre></td></tr></table></div></div>
        </div></p>

<p>再構築が開始されると、画面の右上の Spotlight マークが点滅します。</p>

<p><img src="/images/2014-02-19-mac-app-store-account-01.png" alt="Spotlight 索引再構築" /></p>

<p>再構築は結構時間がかかりますが、全部終わるのをまたなくても、僕の場合はアップデートができるようになりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[リア充爆発しろで本当に爆発したシーン]]></title>
    <link href="http://hamasyou.com/blog/2014/02/16/sm20183528/"/>
    <updated>2014-02-16T01:52:46+09:00</updated>
    <id>http://hamasyou.com/blog/2014/02/16/sm20183528</id>
    <content type="html"><![CDATA[<p><strong>リア充爆発しろ</strong> で、爆発した瞬間を初めて見た。。泣いた。</p>

<!-- more -->


<p>ガンダム00 の「ライルvsアニュー 命がけの恋」より。リア充爆発しました。セッちゃん。。。</p>

<script type="text/javascript" src="http://ext.nicovideo.jp/thumb_watch/sm20183528?w=698"></script>


<p><noscript><a href="http://www.nicovideo.jp/watch/sm20183528">【ニコニコ動画】ガンダム00　ライルvsアニュー　命がけの恋</a></noscript></p>

<iframe width="312" height="176" src="http://ext.nicovideo.jp/thumb/sm20183528" scrolling="no" style="border:solid 1px #CCC;" frameborder="0"><a href="http://www.nicovideo.jp/watch/sm20183528">【ニコニコ動画】ガンダム00　ライルvsアニュー　命がけの恋</a></iframe>



]]></content>
  </entry>
  
</feed>
